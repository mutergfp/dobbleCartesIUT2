---
swagger: "2.0"
info:
  description: "Card generation API"
  version: "1.0.0"
  title: "Card generation API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
schemes:
- "http"
paths:
  /cartes/{nbplayers}:
    get:
      tags:
      - "CardGeneration"
      summary: "Génére les cartes de départ en fonction du nombre de joueurs"
      description: ""
      operationId: "initial_cards"
      produces:
      - "application/json"
      parameters:
      - name: "nbplayers"
        in: "path"
        description: "Nombre de joueurs actuellement en jeu"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "Invalid number supplied"
      x-swagger-router-controller: "swagger_server.controllers.card_generation_controller"
  /carte:
    post:
      tags:
      - "CardGeneration"
      summary: "Génére une nouvelle carte du millieu à partir des cartes actuelles\
        \ des joueurs"
      description: ""
      operationId: "middle_card"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CurrentCards"
        description: "Cartes actuelles des joueurs"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Card"
          minItems: 2
          maxItems: 8
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Card"
        400:
          description: "Invalid parameters"
      x-swagger-router-controller: "swagger_server.controllers.card_generation_controller"
  /image/{id}:
    get:
      tags:
      - "Images"
      summary: "Retourne l'image correspondante à un ID"
      description: ""
      operationId: "get_img"
      produces:
      - "application/image"
      parameters:
      - name: "id"
        in: "path"
        description: "Id de l'image à récupèrer"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "file"
        400:
          description: "Invalid id supplied"
      x-swagger-router-controller: "swagger_server.controllers.images_controller"
  /image:
    post:
      tags:
      - "Images"
      summary: "Ajoute une image aux possibilités pour la génération des cartes"
      description: ""
      operationId: "add_img"
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "img"
        in: "formData"
        description: "image à ajouter"
        required: true
        type: "file"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid image supplied"
      x-swagger-router-controller: "swagger_server.controllers.images_controller"
  /images:
    get:
      tags:
      - "Images"
      summary: "Retourne la liste de toutes les images"
      description: ""
      operationId: "get_images"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Card"
      x-swagger-router-controller: "swagger_server.controllers.images_controller"
definitions:
  Card:
    type: "array"
    items:
      type: "integer"
      format: "int64"
    example:
    - 0
    - 1
    - 3
    - 4
    - 5
    - 6
    - 8
    - 10
    minItems: 8
    maxItems: 8
  inline_response_200:
    properties:
      middleCard:
        $ref: "#/definitions/Card"
      playersCards:
        type: "array"
        items:
          $ref: "#/definitions/Card"
        maxItems: 8
        minItems: 2
